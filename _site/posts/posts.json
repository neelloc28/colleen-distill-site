[
  {
    "path": "posts/2021-03-20-post-3/",
    "title": "Does Straighter = Safer?",
    "description": "Here I use Causal Inference to investigate if sexual orientation impacts college students' perceived safety in the Twin Cities at nighttime. (Preview image retrieved from https://www.artsy.net/article/artsy-editorial-rainbow-flag-universal-symbol-gay-rights)",
    "author": [
      {
        "name": "Colleen Minnihan",
        "url": {}
      }
    ],
    "date": "2020-11-22",
    "categories": [],
    "contents": "\n\n\n#load required packages\nlibrary(foreign)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(pcalg)\n\n#read in data\nacha_mac <- read.spss(\"/Users/colleenminnihan/Documents/causal inference/mac_health_2019.SAV\", to.data.frame = TRUE)\n\n#check dimensions of dataset\ndim(acha_mac)\n\n\n[1] 390 368\n\n#Causal DAG \n\n\n#clean data\nacha_mac_clean <- acha_mac %>%\n  select(RNQ47C, RNQ48, NQ7D, NQ7B, NQ56, NQ54A, NQ32, NQ31A2, RNQ47B) %>%\n  filter(!is.na(RNQ47C)) %>%\n  filter(!is.na(RNQ48)) %>%\n  filter(!is.na(NQ7D)) %>%\n  filter(!is.na(NQ7B)) %>%\n  filter(!is.na(NQ56)) %>%\n  filter(!is.na(NQ54A)) %>%\n  filter(!is.na(NQ32)) %>%\n  filter(!is.na(NQ31A2)) %>%\n  rename('Sexual_orientation' = RNQ48, 'Gender_identity' = RNQ47C,'safe_in_community_nighttime' = NQ7D, 'safe_on_campus_nighttime' = NQ7B, 'relationship_status' = NQ56, 'White' = NQ54A, 'Depression_diagnosis' = NQ32, 'Anxiety_diagnosis' = NQ31A2, 'Trans' = RNQ47B) %>%\n  mutate(Heterosexual = ifelse(Sexual_orientation == 'Straight/Heterosexual', 1, 0), White = ifelse(White == 'WHITE', 1, 0), Anxiety_diagnosis = ifelse(Anxiety_diagnosis == 'No', 0, 1), Depression_diagnosis = ifelse(Depression_diagnosis == \"No\",0, 1), binary_safe_in_community1 = ifelse(safe_in_community_nighttime == 'Very safe', 'Yes', 'No'), binary_safe_in_community2 = ifelse(safe_in_community_nighttime == 'Very safe' | safe_in_community_nighttime == 'Somewhat safe', 'Yes', 'No')) %>% #1 = straight, 0 = not straight\n  mutate(binary_safe_in_community1 = ifelse(binary_safe_in_community1 == \"Yes\", 1,0)) #1 = white, 0 = nonwhite\n\n\n\n#Exploratory Visualizations\n\n\n#diagnosed w/ depression (did not include in blog post draft)\nggplot(acha_mac_clean, aes(x = as.factor(Depression_diagnosis))) + \n  geom_bar() +\n  ggtitle(\"Previous Depression Diagnosis\") +\n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +\n  xlab(\"Diagnosis\") +\n  ylab(\"Number of People\")\n\n\n\n#diagnosed w/ anxiety (did not include in blog post draft)\nggplot(acha_mac_clean, aes(x = as.factor(Anxiety_diagnosis))) + \n  geom_bar() +\n  ggtitle(\"Anxiety Diagnosis or Treatment (past 12 months)\") +\n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +\n  xlab(\"Diagnosis or Treatment\") +\n  ylab(\"Number of People\")\n\n\n\n#gender identity (did not include in blog post draft)\nggplot(acha_mac_clean, aes(x = Gender_identity)) + \n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90)) +\n  ggtitle(\"What is your Gender Identity?\")+\n  xlab(\"Identity\") +\n  ylab(\"Number of People\")\n\n\n\n#trans (did not include in blog post draft)\nggplot(acha_mac_clean, aes(x = Trans)) + \n  geom_bar() +\n  ggtitle(\"Do you Identify as Transgender?\") +\n  xlab(\"Transgender\") +\n  ylab(\"Number of People\")\n\n\n\n#Sexual orientation\nggplot(acha_mac_clean, aes(x = Sexual_orientation)) + \n  geom_bar(fill = \"mediumpurple\") +\n  ggtitle(\"What is your Sexual Orientation?\") +\n  xlab(\"Sexual Orientation\") +\n  ylab(\"Number of People\") +\n  theme(axis.text.x = element_text(angle = 90))\n\n\n\n#sexual orientation binary\nggplot(acha_mac_clean, aes(x = as.factor(Heterosexual))) + \n  geom_bar(fill = \"mediumorchid2\") +\n  ggtitle(\"Are you Heterosexual?\") +\n  xlab(\"Heterosexual\") +\n  ylab(\"Number of People\") +\n  scale_x_discrete(labels = c(\"No\", \"Yes\")) \n\n\n\n#how safe do you feel in the community around campus at night (did not include in blog post draft)\nggplot(acha_mac_clean, aes(x = safe_in_community_nighttime)) + \n  geom_bar() +\n  ggtitle(\"How safe do you feel in the Surrounding Community at Night?\") +\n  xlab(\"Perceived Safety\") +\n  ylab(\"Number of People\")\n\n\n\n#binary safe in community (with yes being only those who said \"very safe\")\nggplot(acha_mac_clean, aes(x = as.factor(binary_safe_in_community1))) + \n  geom_bar(fill = \"mediumpurple4\") +\n  ggtitle(\"Perceived Safety in Community Surrounding Campus at Night (Yes/No)\") +\n  xlab(\"Feel Safe\") +\n  ylab(\"Number of People\") +\n  scale_x_discrete(labels = c(\"No\", \"Yes\"))\n\n\n\n#white race (did not include in blog post draft)\nggplot(acha_mac_clean, aes(x = as.factor(White))) + \n  geom_bar() +\n  ggtitle(\"White Race\") +\n  xlab(\"White\") +\n  ylab(\"Number of People\") +\n  scale_x_discrete(labels = c(\"No\", \"Yes\")) \n\n\n\n\n#Sensitivity Analysis\n\n\nset.seed(451)\nsensitivity_analysis <- function(.data, model_A, model_Y, assoc_A, assoc_Y) {\n    n <- nrow(.data) #takes dataset as input, needs models for A and Y, two sensitivity parameters for U to Y and U to A\n\n    # Obtain residuals with residuals()\n    # Obtain residual variances with sigma()\n    res_A <- residuals(model_A)\n    res_var_A <- sigma(model_A)^2\n    res_Y <- residuals(model_Y)\n    res_var_Y <- sigma(model_Y)^2\n\n    # Compute the mean and variance of U given A and Y\n    mean_U_term1 <- (assoc_A/res_var_A)*res_A\n    mean_U_term2 <- (((res_var_A - assoc_A^2)*assoc_Y)/(res_var_A*res_var_Y))*res_Y\n    mean_U <- mean_U_term1 + mean_U_term2\n\n    var_U_term1 <- (res_var_A - assoc_A^2)/(res_var_A*res_var_Y)\n    var_U_term2 <- res_var_Y - assoc_Y^2 + ((assoc_A*assoc_Y)^2)/res_var_A\n    var_U <- var_U_term1*var_U_term2 #must be positive\n\n    # Simulate U and add it to the data\n    U <- rnorm(n, mean = mean_U, sd = sqrt(var_U))\n    .data$U <- U\n\n    ########################################################################\n    # The part below is the only part you need to change to implement\n    # the sensitivity analysis in a new context.\n\n    # Refit model to estimate the causal effect \n    updated_model <- lm(binary_safe_in_community1 ~ Heterosexual + White + Depression_diagnosis + Anxiety_diagnosis + Gender_identity + U, data = .data)\n    # The names of the coefficients and confidence interval output rows\n    # are called \"A\" for the treatment variable A.\n    # This will change in a new dataset.\n    list(c(\n        estimate = unname(coefficients(updated_model)[\"Heterosexual\"]), \n        ci_95_lower = confint(updated_model)[\"Heterosexual\",1],\n        ci_95_upper = confint(updated_model)[\"Heterosexual\",2]\n    ))\n} #so you can contain the three numerical pieces of info together in one thing/case\n\n# Begin the sensitivity analysis\n\n# Fit required models for the sensitivity analysis\nmod_A <- lm(Heterosexual ~ Gender_identity, data = acha_mac_clean) #how A depends on the confounders\nmod_Y <- lm(binary_safe_in_community1 ~ Heterosexual + Gender_identity, data = acha_mac_clean) #our wrong model that ignored the potential unmeasured confounder\n\nsummary(mod_Y)\n\n\n\nCall:\nlm(formula = binary_safe_in_community1 ~ Heterosexual + Gender_identity, \n    data = acha_mac_clean)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.4910 -0.2595 -0.1703  0.5090  0.8297 \n\nCoefficients:\n                                                 Estimate Std. Error\n(Intercept)                                       0.17026    0.03806\nHeterosexual                                      0.08920    0.04847\nGender_identityMan                                0.23150    0.05140\nGender_identityTrans man                         -0.17026    0.31395\nGender_identityGenderqueer                        0.06503    0.11347\nGender_identityAnother identity (please specify)  0.07974    0.22362\n                                                 t value Pr(>|t|)    \n(Intercept)                                        4.473 1.02e-05 ***\nHeterosexual                                       1.840   0.0665 .  \nGender_identityMan                                 4.504 8.92e-06 ***\nGender_identityTrans man                          -0.542   0.5879    \nGender_identityGenderqueer                         0.573   0.5669    \nGender_identityAnother identity (please specify)   0.357   0.7216    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4407 on 376 degrees of freedom\nMultiple R-squared:  0.07256,   Adjusted R-squared:  0.06022 \nF-statistic: 5.883 on 5 and 376 DF,  p-value: 2.994e-05\n\n# Set up degree of association between U and A and between U and Y\n# The U->A associations have some constraints: we set up values \n# for the U->A associations that are at most equal to the\n# standard deviation of the residuals from the model for A.\nU_A_assocs <- seq(from = -0.1, to = sigma(mod_A), length.out = 10)\nU_Y_assocs <- seq(from = 0.01, to = sigma(mod_Y), by = 0.1) #look at summary output of mod_Y to determine these values, we want the association to be same sign as A -> Y\n\n# Form all combinations of the U->A and U->Y sensitivity parameters\nsens_data <- expand.grid(U_A = U_A_assocs, U_Y = U_Y_assocs)\n\n# Run sensitivity analysis\nsens_data <- sens_data %>%\n    group_by(U_A, U_Y) %>%\n    mutate(sens = sensitivity_analysis(acha_mac_clean, mod_A, mod_Y, U_A, U_Y))\n# Collect sensitivity analysis results in a data.frame\nsens_data <- bind_cols(sens_data[,1:2], bind_rows(sens_data$sens))\n\n\n# Plot results\nprepender <- function(string, prefix = \"U -> Y strength:\") paste(prefix, string)\n\nggplot(sens_data, aes(x = U_A, y = estimate)) +\n    geom_ribbon(aes(ymin = ci_95_lower, ymax = ci_95_upper), fill = \"grey70\") +\n    geom_line() +\n    geom_hline(aes(yintercept = coefficients(mod_Y)[\"A\"]), color = \"blue\", lty = \"dashed\") +\n    geom_hline(aes(yintercept = 0), color = \"blue\") +\n    facet_wrap(~U_Y, labeller = as_labeller(prepender)) +\n    labs(x = \"Strength of U -> A association\", y = \"ACE and 95% CI\") +\n    geom_hline(aes(yintercept = 0.08920), color = \"red\") #this is the original ACE of the model that doesn't account for unmeasured variables\n\n\n\n\n#Interaction Term Plots\n\n\n#checking for interaction between gender identity and heterosexual\nggplot(acha_mac_clean, aes(x = as.factor(Heterosexual), fill = as.factor(binary_safe_in_community1))) +\n    geom_bar(position = \"fill\") +\n    facet_grid(~Gender_identity) +\n  labs(fill = \"Feels Safe\") +\n  xlab(\"Heterosexual\") +\n  ylab(\"Probability\") +\n  ggtitle(\"Gender Identity and Heterosexuality Interaction Term Plot\")\n\n\n\n#checking for interaction between trans identity and heterosexuality (did not include in blog post draft)\nggplot(acha_mac_clean, aes(x = as.factor(Heterosexual), fill = as.factor(binary_safe_in_community1))) +\n    geom_bar(position = \"fill\") +\n    facet_grid(~Trans)\n\n\n\n\n#Making the models\n\n\n#linear model\nsafetyACEoverall <- lm(binary_safe_in_community1 ~ Heterosexual + Gender_identity + Anxiety_diagnosis + White, data = acha_mac_clean) #corresponds to sensitivity\nsummary(safetyACEoverall)\n\n\n\nCall:\nlm(formula = binary_safe_in_community1 ~ Heterosexual + Gender_identity + \n    Anxiety_diagnosis + White, data = acha_mac_clean)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.5152 -0.2912 -0.2062  0.4848  0.9118 \n\nCoefficients:\n                                                 Estimate Std. Error\n(Intercept)                                       0.14168    0.05867\nHeterosexual                                      0.08502    0.04978\nGender_identityMan                                0.22405    0.05169\nGender_identityTrans man                         -0.20618    0.31497\nGender_identityGenderqueer                        0.08271    0.11420\nGender_identityAnother identity (please specify)  0.10282    0.22419\nAnxiety_diagnosis                                -0.05350    0.05265\nWhite                                             0.06449    0.05269\n                                                 t value Pr(>|t|)    \n(Intercept)                                        2.415   0.0162 *  \nHeterosexual                                       1.708   0.0885 .  \nGender_identityMan                                 4.334 1.88e-05 ***\nGender_identityTrans man                          -0.655   0.5131    \nGender_identityGenderqueer                         0.724   0.4694    \nGender_identityAnother identity (please specify)   0.459   0.6467    \nAnxiety_diagnosis                                 -1.016   0.3102    \nWhite                                              1.224   0.2217    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4406 on 374 degrees of freedom\nMultiple R-squared:  0.078, Adjusted R-squared:  0.06074 \nF-statistic:  4.52 on 7 and 374 DF,  p-value: 7.448e-05\n\n#linear model with interaction term\nsafetyACEsubgroup <- lm(binary_safe_in_community1 ~ Heterosexual + Gender_identity + Anxiety_diagnosis + White + Heterosexual:Gender_identity, data = acha_mac_clean) #corresponds to sensitivity\nsummary(safetyACEsubgroup)\n\n\n\nCall:\nlm(formula = binary_safe_in_community1 ~ Heterosexual + Gender_identity + \n    Anxiety_diagnosis + White + Heterosexual:Gender_identity, \n    data = acha_mac_clean)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.5427 -0.2739 -0.2134  0.4573  0.8924 \n\nCoefficients: (3 not defined because of singularities)\n                                                              Estimate\n(Intercept)                                                    0.16745\nHeterosexual                                                   0.04598\nGender_identityMan                                             0.12144\nGender_identityTrans man                                      -0.22793\nGender_identityGenderqueer                                     0.06385\nGender_identityAnother identity (please specify)               0.08221\nAnxiety_diagnosis                                             -0.05980\nWhite                                                          0.06048\nHeterosexual:Gender_identityMan                                0.14739\nHeterosexual:Gender_identityTrans man                               NA\nHeterosexual:Gender_identityGenderqueer                             NA\nHeterosexual:Gender_identityAnother identity (please specify)       NA\n                                                              Std. Error\n(Intercept)                                                      0.06180\nHeterosexual                                                     0.05792\nGender_identityMan                                               0.09356\nGender_identityTrans man                                         0.31509\nGender_identityGenderqueer                                       0.11498\nGender_identityAnother identity (please specify)                 0.22451\nAnxiety_diagnosis                                                0.05282\nWhite                                                            0.05273\nHeterosexual:Gender_identityMan                                  0.11207\nHeterosexual:Gender_identityTrans man                                 NA\nHeterosexual:Gender_identityGenderqueer                               NA\nHeterosexual:Gender_identityAnother identity (please specify)         NA\n                                                              t value\n(Intercept)                                                     2.710\nHeterosexual                                                    0.794\nGender_identityMan                                              1.298\nGender_identityTrans man                                       -0.723\nGender_identityGenderqueer                                      0.555\nGender_identityAnother identity (please specify)                0.366\nAnxiety_diagnosis                                              -1.132\nWhite                                                           1.147\nHeterosexual:Gender_identityMan                                 1.315\nHeterosexual:Gender_identityTrans man                              NA\nHeterosexual:Gender_identityGenderqueer                            NA\nHeterosexual:Gender_identityAnother identity (please specify)      NA\n                                                              Pr(>|t|)\n(Intercept)                                                    0.00705\nHeterosexual                                                   0.42781\nGender_identityMan                                             0.19512\nGender_identityTrans man                                       0.46991\nGender_identityGenderqueer                                     0.57902\nGender_identityAnother identity (please specify)               0.71443\nAnxiety_diagnosis                                              0.25829\nWhite                                                          0.25209\nHeterosexual:Gender_identityMan                                0.18926\nHeterosexual:Gender_identityTrans man                               NA\nHeterosexual:Gender_identityGenderqueer                             NA\nHeterosexual:Gender_identityAnother identity (please specify)       NA\n                                                                \n(Intercept)                                                   **\nHeterosexual                                                    \nGender_identityMan                                              \nGender_identityTrans man                                        \nGender_identityGenderqueer                                      \nGender_identityAnother identity (please specify)                \nAnxiety_diagnosis                                               \nWhite                                                           \nHeterosexual:Gender_identityMan                                 \nHeterosexual:Gender_identityTrans man                           \nHeterosexual:Gender_identityGenderqueer                         \nHeterosexual:Gender_identityAnother identity (please specify)   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4402 on 373 degrees of freedom\nMultiple R-squared:  0.08226,   Adjusted R-squared:  0.06257 \nF-statistic: 4.179 on 8 and 373 DF,  p-value: 8.323e-05\n\n#generalized linear model (because of the binary response)\nsafetyACEmod2 <- glm(binary_safe_in_community1 ~ Heterosexual + Gender_identity + Anxiety_diagnosis + White, data = acha_mac_clean, family = \"binomial\")\nsummary(safetyACEmod2)\n\n\n\nCall:\nglm(formula = binary_safe_in_community1 ~ Heterosexual + Gender_identity + \n    Anxiety_diagnosis + White, family = \"binomial\", data = acha_mac_clean)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.2288  -0.8224  -0.6748   1.1268   2.0615  \n\nCoefficients:\n                                                 Estimate Std. Error\n(Intercept)                                       -1.6972     0.3231\nHeterosexual                                       0.4536     0.2636\nGender_identityMan                                 1.0305     0.2509\nGender_identityTrans man                         -13.2022   624.1939\nGender_identityGenderqueer                         0.4638     0.6187\nGender_identityAnother identity (please specify)   0.5697     1.1836\nAnxiety_diagnosis                                 -0.3005     0.2835\nWhite                                              0.3333     0.2786\n                                                 z value Pr(>|z|)    \n(Intercept)                                       -5.254 1.49e-07 ***\nHeterosexual                                       1.721   0.0853 .  \nGender_identityMan                                 4.108 3.99e-05 ***\nGender_identityTrans man                          -0.021   0.9831    \nGender_identityGenderqueer                         0.750   0.4534    \nGender_identityAnother identity (please specify)   0.481   0.6303    \nAnxiety_diagnosis                                 -1.060   0.2891    \nWhite                                              1.196   0.2316    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 460.44  on 381  degrees of freedom\nResidual deviance: 430.63  on 374  degrees of freedom\nAIC: 446.63\n\nNumber of Fisher Scoring iterations: 13\n\n#linear model with trans variable instead of gender identity\nmod_withtrans <- lm(binary_safe_in_community1 ~ Heterosexual + Trans, data = acha_mac_clean) #corresponds to sensitivity\nsummary(mod_withtrans)\n\n\n\nCall:\nlm(formula = binary_safe_in_community1 ~ Heterosexual + Trans, \n    data = acha_mac_clean)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.3489 -0.3489 -0.2164  0.6511  0.7925 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   0.216424   0.036486   5.932 6.76e-09 ***\nHeterosexual  0.132496   0.047499   2.789  0.00555 ** \nTransYes     -0.008923   0.111193  -0.080  0.93608    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.451 on 379 degrees of freedom\nMultiple R-squared:  0.02122,   Adjusted R-squared:  0.01605 \nF-statistic: 4.108 on 2 and 379 DF,  p-value: 0.01719\n\n\n\n\n",
    "preview": "posts/2021-03-20-post-3/pride-flag.jpeg",
    "last_modified": "2021-03-20T21:52:32-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-20-post-2/",
    "title": "Employee Attrition: Why do people leave their jobs?",
    "description": "Here, we wanted to see which potential (or current) employees have higher likelihoods of leaving a job without being replaced, and which are more likely to stay. To investigate this question, we used Machine Learning concepts to pick the ideal model and parameters for our dataset.",
    "author": [
      {
        "name": "Colleen, Ikran, Sebastian, and Amritha",
        "url": {}
      }
    ],
    "date": "2020-04-21",
    "categories": [],
    "contents": "\n\n\n\n\nIntroduction\n\nMany people remain at their jobs for a long time, but some people inevitably end up leaving. Wouldn’t it be beneficial to be able to tell which potential (or current) employees have a higher likelihood of leaving the job without being replaced, and which are likely to stay?\nThis knowledge could be used by the employers for good. For example, they could see what factors influence employee attrition that can be changed to better the employee’s experience, such as whether or not the employee works overtime. It could also be used for not so good reasons, if a model predicts that a potential employee is likely to quit, and that leads to them not even being considered for the job.\nWe wanted to explore this more, to see if we could accurately predict whether or not an employee will leave their job. We used Kaggle’s (fictional) attrition dataset, which contains data from 1470 employees. In the original dataset, about 83.9% of employees were replaced, while 16.1% resulted in attrition. These percentages are shown in the plot below.\n\n\nggplot(data = attrition, aes(x=Attrition)) +\n  geom_bar(color = 'blue', fill = 'lightblue') +\n  ggtitle(\"Employee Attrition in Full Dataset\")\n\n\n\n\nThe dataset included 35 variables:\n\n [1] \"Age\"                      \"Attrition\"               \n [3] \"BusinessTravel\"           \"DailyRate\"               \n [5] \"Department\"               \"DistanceFromHome\"        \n [7] \"Education\"                \"EducationField\"          \n [9] \"EmployeeCount\"            \"EmployeeNumber\"          \n[11] \"EnvironmentSatisfaction\"  \"Gender\"                  \n[13] \"HourlyRate\"               \"JobInvolvement\"          \n[15] \"JobLevel\"                 \"JobRole\"                 \n[17] \"JobSatisfaction\"          \"MaritalStatus\"           \n[19] \"MonthlyIncome\"            \"MonthlyRate\"             \n[21] \"NumCompaniesWorked\"       \"Over18\"                  \n[23] \"OverTime\"                 \"PercentSalaryHike\"       \n[25] \"PerformanceRating\"        \"RelationshipSatisfaction\"\n[27] \"StandardHours\"            \"StockOptionLevel\"        \n[29] \"TotalWorkingYears\"        \"TrainingTimesLastYear\"   \n[31] \"WorkLifeBalance\"          \"YearsAtCompany\"          \n[33] \"YearsInCurrentRole\"       \"YearsSinceLastPromotion\" \n[35] \"YearsWithCurrManager\"    \n\n\nData Cleaning\n\nTo clean the data, we recoded the levels of the WorkLifeBalance and EnvironmentSatisfaction variables to be more meaningful to the viewer, rather than just easily-misinterperable numbers. Originally these variables were coded as numbers 1-4, but we refactored them to take on their original values, e.g. “High” or “Good”.\n\nOur hypothesis\n\nWe then tried to brainstorm what variables (out of the 35 in the attrition data) might be important predictors of whether or not an employee will quit their job. We split the data into training and testing, and created exploratory plots of some of the variables using the training dataset. A few variables that we thought would be important were OverTime, YearsAtCompany, Age, WorkLifeBalance, and EnvironmentSatisfaction. The relationships of these variables to Attrition are visualized below.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe first model we built was a logistic regression model using these variables (OverTime, YearsAtCompany, Age, WorkLifeBalance, and EnvironmentSatisfaction) that we initially suspected to have an influence on attrition rates.\n1st model\n\n\nset.seed(253)\n\nattrition_mod1 <- train(\n    Attrition ~ OverTime + YearsAtCompany + Age + WorkLifeBalance + EnvironmentSatisfaction ,\n    data = attrition_train,\n    method = \"glm\",\n    family = \"binomial\",\n    trControl = trainControl(method = \"cv\", number = 5),\n    metric = \"Accuracy\",\n    na.action = na.omit\n)\n\n\n\n\n\nCall:\nNULL\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.4023  -0.5910  -0.4175  -0.2728   3.3062  \n\nCoefficients:\n                                   Estimate Std. Error z value\n(Intercept)                         1.50312    0.52390   2.869\nOverTimeYes                         1.46045    0.18813   7.763\nYearsAtCompany                     -0.05950    0.01999  -2.976\nAge                                -0.04962    0.01094  -4.536\nWorkLifeBalanceGood                -0.58249    0.38613  -1.509\nWorkLifeBalanceBetter              -0.90099    0.36450  -2.472\nWorkLifeBalanceBest                -0.60660    0.44014  -1.378\nEnvironmentSatisfactionMedium      -1.10949    0.27721  -4.002\nEnvironmentSatisfactionHigh        -0.99689    0.24513  -4.067\n`EnvironmentSatisfactionVery High` -1.12372    0.24923  -4.509\n                                   Pr(>|z|)    \n(Intercept)                         0.00412 ** \nOverTimeYes                        8.30e-15 ***\nYearsAtCompany                      0.00292 ** \nAge                                5.72e-06 ***\nWorkLifeBalanceGood                 0.13141    \nWorkLifeBalanceBetter               0.01344 *  \nWorkLifeBalanceBest                 0.16814    \nEnvironmentSatisfactionMedium      6.27e-05 ***\nEnvironmentSatisfactionHigh        4.77e-05 ***\n`EnvironmentSatisfactionVery High` 6.52e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 919.16  on 1028  degrees of freedom\nResidual deviance: 787.87  on 1019  degrees of freedom\nAIC: 807.87\n\nNumber of Fisher Scoring iterations: 5\n\nWe can interpret the exponentiated coefficients of this model as multipliers to the odds of an employee leaving resulting in attrition. For example, the exponentiated coefficient on the OverTimeYes variable of 4.308 means that employees who worked overtime have their odds of leaving resulting in attrition multiplied by 4.308 compared to employees who did not work overtime.\n\nModel Evaluation\n\nTo evaluate this model, we looked at the accuracy rate, as well as the sensitivity and specificty. This model had an accuracy rate of 84.9%. This appears good at first glance, but it is very close to the no information rate (the rate at which a correct guess can be made with no information) of the data, which is 83.6%. Additionally, the sensitivity is 14.2% and the specificity is 98.7%. This means that the model is mostly guessing no attrition for every case and getting the actual no attrition cases right almost all the time and the actual attrition cases wrong almost all the time. We want our model to be able to detect attrition, so this isn’t the best model for us.\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  No Yes\n       No  849 145\n       Yes  11  24\n                                         \n               Accuracy : 0.8484         \n                 95% CI : (0.825, 0.8698)\n    No Information Rate : 0.8358         \n    P-Value [Acc > NIR] : 0.1462         \n                                         \n                  Kappa : 0.1896         \n                                         \n Mcnemar's Test P-Value : <2e-16         \n                                         \n            Sensitivity : 0.14201        \n            Specificity : 0.98721        \n         Pos Pred Value : 0.68571        \n         Neg Pred Value : 0.85412        \n             Prevalence : 0.16424        \n         Detection Rate : 0.02332        \n   Detection Prevalence : 0.03401        \n      Balanced Accuracy : 0.56461        \n                                         \n       'Positive' Class : Yes            \n                                         \n\n\n\n# Accuracy rate of 84.9%... BUT it isn't much better than the No Information Rate (predicting these by chance) of 83.6%...\n# we care more about the sensitivity, which is the percentage of correct predictions that people would leave their job out of all of the people who did end up leaving their job\n# sensitivity is .13; therefore, this model does not seem very good\n\n# CV accuracy of 84.5%\nattrition_mod1$results$Accuracy\n\n\n\nOur second model uses Logistic Regression using all variables except Over18 and StandardHours. These two variables only have one factor, so they are meaningless in our model-building.\n2nd Model\n\n\nset.seed(253)\n\n# Perform logistic regression\nattrition_allvars <- train(\n    Attrition ~ . ,\n    data = attrition_train %>% select(-Over18, -StandardHours),\n    method = \"glm\",\n    family = \"binomial\",\n    trControl = trainControl(method = \"cv\", number = 5),\n    metric = \"Accuracy\",\n    na.action = na.omit\n)\n\nsummary(attrition_allvars)\n\n\n\nCall:\nNULL\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.6753  -0.4695  -0.2278  -0.0714   3.4297  \n\nCoefficients: (1 not defined because of singularities)\n                                     Estimate Std. Error z value\n(Intercept)                        -1.154e+01  7.312e+02  -0.016\nAge                                -2.164e-02  1.664e-02  -1.300\nBusinessTravelTravel_Frequently     2.180e+00  5.308e-01   4.106\nBusinessTravelTravel_Rarely         1.275e+00  4.993e-01   2.553\nDailyRate                          -7.058e-04  2.801e-04  -2.520\n`DepartmentResearch & Development`  1.441e+01  7.312e+02   0.020\nDepartmentSales                     1.234e+01  7.312e+02   0.017\nDistanceFromHome                    4.932e-02  1.349e-02   3.657\nEducation                          -7.538e-02  1.093e-01  -0.690\n`EducationFieldLife Sciences`      -1.643e+00  1.031e+00  -1.593\nEducationFieldMarketing            -1.399e+00  1.087e+00  -1.287\nEducationFieldMedical              -1.505e+00  1.039e+00  -1.448\nEducationFieldOther                -1.577e+00  1.115e+00  -1.415\n`EducationFieldTechnical Degree`   -4.602e-01  1.041e+00  -0.442\nEmployeeCount                              NA         NA      NA\nEmployeeNumber                     -2.481e-04  1.914e-04  -1.296\nEnvironmentSatisfactionMedium      -1.367e+00  3.427e-01  -3.989\nEnvironmentSatisfactionHigh        -1.241e+00  3.110e-01  -3.991\n`EnvironmentSatisfactionVery High` -1.480e+00  3.140e-01  -4.714\nGenderMale                          5.581e-01  2.308e-01   2.418\nHourlyRate                          5.191e-03  5.615e-03   0.924\nJobInvolvement                     -5.855e-01  1.518e-01  -3.856\nJobLevel                            2.594e-02  3.989e-01   0.065\n`JobRoleHuman Resources`            1.562e+01  7.312e+02   0.021\n`JobRoleLaboratory Technician`      1.256e+00  5.556e-01   2.260\nJobRoleManager                      7.050e-01  9.822e-01   0.718\n`JobRoleManufacturing Director`    -1.729e-01  6.392e-01  -0.270\n`JobRoleResearch Director`         -2.320e+00  1.335e+00  -1.739\n`JobRoleResearch Scientist`         2.811e-01  5.734e-01   0.490\n`JobRoleSales Executive`            3.118e+00  1.399e+00   2.229\n`JobRoleSales Representative`       4.156e+00  1.463e+00   2.842\nJobSatisfaction                    -3.711e-01  1.017e-01  -3.648\nMaritalStatusMarried                3.528e-01  3.316e-01   1.064\nMaritalStatusSingle                 1.333e+00  4.317e-01   3.088\nMonthlyIncome                       7.089e-06  1.033e-04   0.069\nMonthlyRate                        -5.943e-08  1.564e-05  -0.004\nNumCompaniesWorked                  1.562e-01  4.980e-02   3.136\nOverTimeYes                         2.072e+00  2.454e-01   8.446\nPercentSalaryHike                   1.625e-02  4.975e-02   0.327\nPerformanceRating                  -3.353e-02  5.069e-01  -0.066\nRelationshipSatisfaction           -3.011e-01  1.037e-01  -2.903\nStockOptionLevel                   -2.418e-01  2.019e-01  -1.198\nTotalWorkingYears                  -4.195e-02  3.658e-02  -1.147\nTrainingTimesLastYear              -2.087e-01  9.326e-02  -2.237\nWorkLifeBalanceGood                -5.769e-01  4.806e-01  -1.200\nWorkLifeBalanceBetter              -1.289e+00  4.588e-01  -2.810\nWorkLifeBalanceBest                -8.765e-01  5.489e-01  -1.597\nYearsAtCompany                      9.716e-02  4.504e-02   2.157\nYearsInCurrentRole                 -1.444e-01  5.699e-02  -2.534\nYearsSinceLastPromotion             1.297e-01  5.427e-02   2.390\nYearsWithCurrManager               -1.798e-01  5.671e-02  -3.170\n                                   Pr(>|z|)    \n(Intercept)                        0.987410    \nAge                                0.193437    \nBusinessTravelTravel_Frequently    4.02e-05 ***\nBusinessTravelTravel_Rarely        0.010667 *  \nDailyRate                          0.011732 *  \n`DepartmentResearch & Development` 0.984272    \nDepartmentSales                    0.986536    \nDistanceFromHome                   0.000255 ***\nEducation                          0.490339    \n`EducationFieldLife Sciences`      0.111169    \nEducationFieldMarketing            0.197945    \nEducationFieldMedical              0.147641    \nEducationFieldOther                0.157143    \n`EducationFieldTechnical Degree`   0.658385    \nEmployeeCount                            NA    \nEmployeeNumber                     0.194933    \nEnvironmentSatisfactionMedium      6.65e-05 ***\nEnvironmentSatisfactionHigh        6.58e-05 ***\n`EnvironmentSatisfactionVery High` 2.43e-06 ***\nGenderMale                         0.015601 *  \nHourlyRate                         0.355279    \nJobInvolvement                     0.000115 ***\nJobLevel                           0.948156    \n`JobRoleHuman Resources`           0.982959    \n`JobRoleLaboratory Technician`     0.023810 *  \nJobRoleManager                     0.472884    \n`JobRoleManufacturing Director`    0.786830    \n`JobRoleResearch Director`         0.082097 .  \n`JobRoleResearch Scientist`        0.623925    \n`JobRoleSales Executive`           0.025842 *  \n`JobRoleSales Representative`      0.004490 ** \nJobSatisfaction                    0.000265 ***\nMaritalStatusMarried               0.287269    \nMaritalStatusSingle                0.002014 ** \nMonthlyIncome                      0.945273    \nMonthlyRate                        0.996968    \nNumCompaniesWorked                 0.001714 ** \nOverTimeYes                         < 2e-16 ***\nPercentSalaryHike                  0.743877    \nPerformanceRating                  0.947261    \nRelationshipSatisfaction           0.003694 ** \nStockOptionLevel                   0.231003    \nTotalWorkingYears                  0.251447    \nTrainingTimesLastYear              0.025267 *  \nWorkLifeBalanceGood                0.229984    \nWorkLifeBalanceBetter              0.004958 ** \nWorkLifeBalanceBest                0.110300    \nYearsAtCompany                     0.030984 *  \nYearsInCurrentRole                 0.011290 *  \nYearsSinceLastPromotion            0.016843 *  \nYearsWithCurrManager               0.001525 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 919.16  on 1028  degrees of freedom\nResidual deviance: 573.42  on  979  degrees of freedom\nAIC: 673.42\n\nNumber of Fisher Scoring iterations: 15\n\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  No Yes\n       No  836  82\n       Yes  24  87\n                                          \n               Accuracy : 0.897           \n                 95% CI : (0.8768, 0.9149)\n    No Information Rate : 0.8358          \n    P-Value [Acc > NIR] : 1.313e-08       \n                                          \n                  Kappa : 0.5648          \n                                          \n Mcnemar's Test P-Value : 3.089e-08       \n                                          \n            Sensitivity : 0.51479         \n            Specificity : 0.97209         \n         Pos Pred Value : 0.78378         \n         Neg Pred Value : 0.91068         \n             Prevalence : 0.16424         \n         Detection Rate : 0.08455         \n   Detection Prevalence : 0.10787         \n      Balanced Accuracy : 0.74344         \n                                          \n       'Positive' Class : Yes             \n                                          \n\n\n\n# The CV accuracy of 87.5%.\nattrition_allvars$results$Accuracy\n\n\n\nThis model has a training accuracy of 89.7% and a CV accuracy of 87.9%, an improvement from the previous model. Additionally, the sensitivity of this model is much higher at 51.5%. However, including almost all of the variables makes this model less intuitive. Additionally, it might make the model more prone to overfitting. In order to address this problem, let’s look at what variables are the most crucial to include in this model by making a variable importance plot:\n\n\nvip(attrition_allvars$finalModel, num_features = 30, bar = FALSE)\n\n\n\n\nThe top 5 most important variables in this model are Overtime, EnvironmentSatisfaction, BusinessTravel, JobInvolvement,and DistanceFromHome. Our third model uses logistic regression with these 5 variables.\n3rd model\n\n\nset.seed(253)\n\n\nattrition_bestvars <- train(\n    Attrition ~ OverTime + BusinessTravel + JobInvolvement + DistanceFromHome + EnvironmentSatisfaction  ,\n    data = attrition_train,\n    method = \"glm\",\n    family = \"binomial\",\n    trControl = trainControl(method = \"cv\", number = 5),\n    metric = \"Accuracy\",\n    na.action = na.omit\n)\n\n\n\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  No Yes\n       No  844 147\n       Yes  16  22\n                                          \n               Accuracy : 0.8416          \n                 95% CI : (0.8178, 0.8634)\n    No Information Rate : 0.8358          \n    P-Value [Acc > NIR] : 0.3244          \n                                          \n                  Kappa : 0.162           \n                                          \n Mcnemar's Test P-Value : <2e-16          \n                                          \n            Sensitivity : 0.13018         \n            Specificity : 0.98140         \n         Pos Pred Value : 0.57895         \n         Neg Pred Value : 0.85166         \n             Prevalence : 0.16424         \n         Detection Rate : 0.02138         \n   Detection Prevalence : 0.03693         \n      Balanced Accuracy : 0.55579         \n                                          \n       'Positive' Class : Yes             \n                                          \n\n\n\n# The CV accuracy is 84.5%.\nattrition_bestvars$results$Accuracy\n\n\n\nThe model ends up having only 84.2% training accuracy, 84.1% CV accuracy, and 13.0% sensitivity, which is similarly poor to our first model. Another method of trying to reduce the number of variables in a model is by using lasso to penalize having lots of variables. For our 4th model, we tried a lasso model to do this and also hopefully get better accuracy and sensitivity rates.\n4th model\n\n\nset.seed(253)\n\nattrition_lasso <- train(\n    Attrition ~ .,\n    data = attrition_train %>% select(-Over18, -StandardHours),\n    method = \"glmnet\",\n    family = \"binomial\",\n    trControl = trainControl(method = \"cv\", number = 5),\n    tuneGrid = data.frame(alpha = 1, \n                          lambda = 10^seq(-4, 0, length = 100)),\n    metric = \"Accuracy\",\n    na.action = na.omit\n)\n\n\n\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  No Yes\n       No  838  88\n       Yes  22  81\n                                          \n               Accuracy : 0.8931          \n                 95% CI : (0.8726, 0.9113)\n    No Information Rate : 0.8358          \n    P-Value [Acc > NIR] : 1.080e-07       \n                                          \n                  Kappa : 0.5381          \n                                          \n Mcnemar's Test P-Value : 5.736e-10       \n                                          \n            Sensitivity : 0.47929         \n            Specificity : 0.97442         \n         Pos Pred Value : 0.78641         \n         Neg Pred Value : 0.90497         \n             Prevalence : 0.16424         \n         Detection Rate : 0.07872         \n   Detection Prevalence : 0.10010         \n      Balanced Accuracy : 0.72685         \n                                          \n       'Positive' Class : Yes             \n                                          \n  alpha      lambda  Accuracy     Kappa AccuracySD   KappaSD\n1     1 0.001232847 0.8824485 0.4925641 0.02783599 0.1133576\n\n\n\n# The CV accuracy is 88.2% with a lambda value of 0.001232847.    \nattrition_lasso$bestTune$lambda\n\n\n\n\nModel Evaluation\n\nThis model, using the best lambda (of 0.001232847) had an accuracy rate of 89.31%, which is noticeably higher than the No Information Rate. Most importantly for our model, the sensitivity is 47.9%, meaning, for all the people that truly attrite, we predict correctly 47.9% of the time. Ideally, we would want something higher still, but this sensitivity is much better than the sensitivities in our previous models (besides the all-variable one).\nThe plot below of lambda versus Accuracy shows that Model 4 used the lambda value of 0.001232847, because it resulted in the highest accuracy. However, what happens if we make a new LASSO model with a different lambda value?\n\n\n#plot of lambda values versus accuracy\nattrition_lasso$results %>% \n  ggplot(aes(x = lambda, y = Accuracy)) +\n  geom_line() +\n  scale_x_log10() \n\n\n\n\nNow we try another lasso model with a lambda value of 0.0005336699, to see if this results in a better sensitivity, even if it is at the cost of the accuracy lowering a bit.\n5th Model\n\n\nattrition_lasso_best <- train(\n    Attrition ~ .,\n    data = attrition_train %>% select(-Over18, -StandardHours),\n    method = \"glmnet\",\n    family = \"binomial\",\n    trControl = trainControl(method = \"cv\", number = 5),\n    tuneGrid = data.frame(alpha = 1, \n                          lambda = 0.0005336699),\n    metric = \"Accuracy\",\n    na.action = na.omit\n)\n\n\n\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  No Yes\n       No  838  85\n       Yes  22  84\n                                         \n               Accuracy : 0.896          \n                 95% CI : (0.8757, 0.914)\n    No Information Rate : 0.8358         \n    P-Value [Acc > NIR] : 2.258e-08      \n                                         \n                  Kappa : 0.5545         \n                                         \n Mcnemar's Test P-Value : 2.050e-09      \n                                         \n            Sensitivity : 0.49704        \n            Specificity : 0.97442        \n         Pos Pred Value : 0.79245        \n         Neg Pred Value : 0.90791        \n             Prevalence : 0.16424        \n         Detection Rate : 0.08163        \n   Detection Prevalence : 0.10301        \n      Balanced Accuracy : 0.73573        \n                                         \n       'Positive' Class : Yes            \n                                         \n  alpha       lambda  Accuracy     Kappa AccuracySD   KappaSD\n1     1 0.0005336699 0.8765475 0.4840958 0.02442669 0.1102381\n\nThis model, using the best lambda (of 0.001232847) had a training accuracy rate of 89.6% and CV accuracy rate of 87.3%. The sensitivity also went up to 49.7%. The specificity is at 97.4%, meaning that we predict the people who will remain in their positions almost perfectly. Additionally, 5 coefficients were omitted - DepartmentSales, EmployeeCount, JobLevel, MonthlyIncome, and MonthlyRate. This could potentially help alleviate issues with overfitting on our training data.\nConclusion\nModel\nAccuracy\nSensitivity\nSpecificity\nCV Accuracy\nModel 1: Logistic Regression with Exploratory Variables\n0.8484\n0.14201\n0.98721\n0.8416292\nModel 2: Logistic Regression with All Variables\n0.897\n0.51479\n.97209\n0.8785603\nModel 3: Logistic Regression with Most Important Variables\n0.8416\n0.13018\n0.98140\n0.8406394\nModel 4: LASSO with “Best” Lambda\n0.8931\n0.47929\n0.97442\n0.8824485\nModel 5: LASSO with Different Lambda\n0.896\n0.49704\n0.97442\n0.8726971\nTo pick the final model that we want to use, we need to remember what the goal was of this model-building process: we want to predict who is most likely to attrite. That is, who is most likely to leave their position and not be replaced? The sensitivity will tell us that.The model with the highest sensitivity is Model 2. However, this model may be overfitting to the training data. Model 5 has the second highest sensitivity. We now fit Models 2 and 5 on the testing data to see which is the best:\n\n\n#Model 2\nconfusionMatrix(data = predict(attrition_allvars, newdata = attrition_test, type = \"raw\"), reference = as.factor(attrition_test$Attrition), \n                positive = \"Yes\")\n\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  No Yes\n       No  357  40\n       Yes  16  28\n                                          \n               Accuracy : 0.873           \n                 95% CI : (0.8383, 0.9026)\n    No Information Rate : 0.8458          \n    P-Value [Acc > NIR] : 0.061980        \n                                          \n                  Kappa : 0.4311          \n                                          \n Mcnemar's Test P-Value : 0.002116        \n                                          \n            Sensitivity : 0.41176         \n            Specificity : 0.95710         \n         Pos Pred Value : 0.63636         \n         Neg Pred Value : 0.89924         \n             Prevalence : 0.15420         \n         Detection Rate : 0.06349         \n   Detection Prevalence : 0.09977         \n      Balanced Accuracy : 0.68443         \n                                          \n       'Positive' Class : Yes             \n                                          \n\n#Model 5\nconfusionMatrix(data = predict(attrition_lasso_best, newdata = attrition_test, type = \"raw\"), reference = as.factor(attrition_test$Attrition), \n                positive = \"Yes\")\n\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  No Yes\n       No  360  40\n       Yes  13  28\n                                          \n               Accuracy : 0.8798          \n                 95% CI : (0.8458, 0.9087)\n    No Information Rate : 0.8458          \n    P-Value [Acc > NIR] : 0.0251453       \n                                          \n                  Kappa : 0.45            \n                                          \n Mcnemar's Test P-Value : 0.0003551       \n                                          \n            Sensitivity : 0.41176         \n            Specificity : 0.96515         \n         Pos Pred Value : 0.68293         \n         Neg Pred Value : 0.90000         \n             Prevalence : 0.15420         \n         Detection Rate : 0.06349         \n   Detection Prevalence : 0.09297         \n      Balanced Accuracy : 0.68846         \n                                          \n       'Positive' Class : Yes             \n                                          \n\nSurprisingly, their sensitivities are the same! The accuracy on Model 5 is 0.8798 while the accuracy on Model 2 is 0.873, so we can choose Model 5 as our best model for the time being.\n\nOur thoughts\n\nIn the future, we should keep trying to find a model with an even higher sensitivity, because the sensitivity is not “good” in any of these models, and we don’t want to be making many inaccurate predictions about such an important issue. After running the models on the testing data we can conclude that Model 5 (a lasso model fitting all variables with a chosen lambda value) is the “best” model.\n\n\n\n",
    "preview": "posts/2021-03-20-post-2/post-2_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-03-20T20:05:46-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-19-post-1/",
    "title": "Exploring Metro Transit and Nice Ride Data",
    "description": "Here we looked at transportation data from Metro Transit and Nice Ride bike sharing to see what might impact trends in ridership.  This was my final project for Introduction to Data Science. (Preview image retrieved from https://www.metrotransit.org/metro)",
    "author": [
      {
        "name": "Colleen Minnihan, Ellen Graham, Zain Ijaz, Vishal Rana",
        "url": {}
      }
    ],
    "date": "2017-12-06",
    "categories": [],
    "contents": "\nIntroduction\nOur group wanted to know if any relationship exists between Metro Transit Bus Systems and Nice Ride Bikesharing. Through looking at what kinds of information the data gave us, we narrowed down our research to two main questions:\nWhat is the correlation between weather and ridership on Metro Transit and Nice Ride?\nHow do geographical factors relate to Nice Ride and Metro Transit usage?\nFrom there, we took a closer look at each question. While looking at weather, we examined many factors that could influence ridership, such as temperature, precipitation, and snowfall. Through further analysis, we saw that there was no real correlation between precipitation, snowfall, and ridership. Therefore, we focused on temperature, with the sub-question: 1.How does temperature relate to usage? Specifically, we looked at ridership when temperature on a given day in 2016 varied from that area’s average temperature over the last seven years.\nAs for geographical factors, we pruned that broad research question down to: 1. Does distance between bus stops and bike stations correlate with usage? 2. How does Nice Ride usage vary over a day? 3. Does distance relate to usage over a small period of a day? 4. Are usage patterns different in different parts of the city?\nWe were curious if the proximity of a Nice Ride station to a bus stop directly influenced ridership of that Nice Ride station. To gain a deeper understanding, we looked at how Nice Ride usage rose and fell throughout a given day (weekday, Saturday, and Sunday). Lastly, we examined the relationship between proximity of a Nice Ride station to a bus stop and usage of the bike station during five hours of a given day. Initially, we were using three random bus stops for our analysis. We then wondered about two of the most popular Nice Ride stations: one in downtown Minneapolis (likely used for business), and one along Lake Bede Maka Ska (likely used for leisure). Through these more specific research questions, we were able to hypothesize that people combo their transit, meaning they get off a Metro Transit bus and go to a Nice Ride bike station to continue their journey.\nData Collection Process\nInitially, we decided to work with Uber and Lyft data but soon realized that neither of the two were very forthcoming with their data. Our group then started looking for other forms of alternate transit, specifically bike sharing systems within the Twin Cities and eventually found Nice Ride bike sharing data which not only was easily accessible but also was very vast which helped us come up with accurate visualizations and solid conclusions. After obtaining data from Nice Ride, we wanted to know how this form of transit was affected by changes in weather. For that, we looked at various data sources and decided to use weather data from the Minnesota Department of Natural Resources (MN DNR). We chose this specific data because it contained weather information about Minnesota only while other weather data sets contained information pertaining to states other than Minnesota as well and making effective visualizations with the other data sources was not very feasible. Our research question was about metro transit vs. alternate forms of transit and hence, we used Metro Transit data provided to us by Mr. Eric Lind combined with the Nice Ride and MN DNR data to tackle our research topic.\nDatasets we will use\nmetroStops\nData source: Metro Transit Data description: Location of each bus stop (with site ID, city, latitude, longitude, etc.) Data limitations: bus stops that exist from 2014-2017 Data dimensions: 14,919 x 12\nmetroRidership\nData source: Metro Transit\nData description: Gives the day, if it’s a holiday, route number, route type, number of trips, and total number of riders on that day\nData limitations: from January 2014 - October 2017\nData dimensions: 131,078 x 10\nNicerideRidership\nData Source: Nice Ride 2016 data\nData Description: Data contains information about trips: the start and end stations of each trip, the total time it took to complete the journey, and whether the passenger was a casual rider or a member.\nData Limitations: Does not contain information about metro rides in December, January, February, and March. Only has 432283 rows with data in them, the rest are empty and this data has to be cleaned accordingly before use.\nData dimensions: >432,284x8\nNiceRideStops\nData Source: Nice Ride 2016 data\nData Description: Data contains names of Metro Bus Stations, and the exact coordinates of each station (latitude and longitude)\nData Limitations: This dataset contains everything we require to come up with comprehensive visualizations hence, there are no limitations to this data.\nData Dimensions: 202 x 6\nMinneapolisWeather\nData Source: “http://www.dnr.state.mn.us/climate/twin_cities/listings.html”, the Department of Natural Resources has data going back to 1871 on the weather in Minneapolis/St. Paul. All data after 1938 is from MSP airport\nData Description: Gives the date, max temperature, min temperature, amount of percpititaion, amount of snow, and amount of snow on the ground\nData Limitations The specific data we’re using is the weather data between 2010 and 2017. It’s missing the average tempearture for a day, but the min and max are probably enough to work with\nData dimensions: 2884 x 6\n\n\n\n\n\n\nRead in data on MetroTransit\n\n\n\nWeather analysis\n\n\n\n\n\n\n\n\n\nVisualization of how ridership is dependent on temperature of a day and how it depends on divergence from historical temperature on that day.\n\n\n\nWe see that ridership does correlate wtih absolute temperature peaking at around 50 degrees F.\n\n\n\nRidership drops off significantly on days where weather is significantly colder than norms, and is approximately constant for temps above norms.\nDoing same weather analysis with ridership\n\n\n\nLook at how NiceRide ridership correlates to temperature.\n\n\n\nUnsuprisingly, more people ride bikes in warmer weather.\nNow look at how ridership correlates to departure from climate normals.\n\n\n\nPeople ride much less on days with much lower temperatures than normals, and more on days higher than normals.\nGeography and Bike and Bus Ridership\n\n\n\nFirst, let’s visualize where all of the Minneapolis Metro Transit bus stops and Nice Ride bike stations are located.\n\n\n\nHere, we can see the many Metro Transit stations that are in Minneapolis, with a large cluster of them in located in downtown Minneapolis.\n\n\n\nWe can see that there are much fewer Nice Ride stations than Metro Transit bus stops, with most stations clustered in the center of Minneapolis and near parks.\n\n\n\nTo visualize Niceride stations’ distances to bus stops and their ridership.\n\n\n\nNow that we have a basic understanding of where the Minneapolis Metro Transit stop and Nice Ride Stations are located, we wanted to see how distance from a bike station to a bus stop influenced ridership. Each dot on the map represents one Nice Ride station. The sizing of the dots is based on number of total riders over the course of 2016 at that station. The bigger the dot, the more that station was used. The color of the dots represents how close that station was to a bus stop. If the dot color is at the blue end of the spectrum, the Nice Ride station is within 200 meters from a bus stop. If the dot color is orange, it is around 600 meters away from a bus stop. Through this visualization, we can see that the closer a bike station is to a bus stop, the more usage it gets.\n\n\n\n\n\n\n\n\n\nNext, select a set of 3 random bus stations and understand how stations less than 500 meters from these stations change in usage over time.\n\n\n\nVisualize how bike stations near to selected bus stations vary in usage between 3PM and 8PM.\n\n\n\n\n\n#calculates amount of trips the graph represents\nniceRideSampledClose%>%\n   count(site_id)\n\n\n  site_id    n\n1  Stop 1  603\n2  Stop 2 1359\n3  Stop 3  266\n\nWe see spikes and dips in usage that at regular intervals, perhaps indicating a relationship between a bus letting out people and those people using NiceRide.\nFind representative bike station for downtown St. Paul, Minneapolis, and Lake Bde Maka Ska.\n\n\n\nNext, find closest bus stop to these stations.\n\n\n\n\n\n#Gives total number of trips for these two stations in this time period\nniceRideRep%>%\n   count(stationName)\n\n\n        stationName    n\n1 Lake Bde Maka Ska 2888\n2       Minneapolis 3608\n\n\n\n\n",
    "preview": "posts/2021-03-19-post-1/aline-bus.jpg",
    "last_modified": "2021-03-20T21:35:13-05:00",
    "input_file": {}
  }
]
